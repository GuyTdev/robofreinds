{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","SerachBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfeild","target","value","fetch","then","response","json","usersArray","filteredRobots","filter","robot","toLowerCase","includes","SearchBox","ReactDOM","render","document","getElementById"],"mappings":"kOAaeA,EAXF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACzB,OACA,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCSUK,EAbC,SAAC,GAMhB,OAN2B,EAAVC,OAMHC,KAAI,SAACC,GAClB,OAAO,cAAC,EAAD,CACHP,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHEQ,EAAKP,QCEVQ,EAXG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKR,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVS,KAAK,SACLC,YAAY,eACZC,SAAUH,OCCGI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCiBKC,E,kDAnBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAW,GAHK,E,qDAQlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAGzB,WACC,OAAGG,KAAKJ,MAAMC,SACN,yDAEDG,KAAKX,MAAMK,a,GAjBOQ,aC2CZC,G,wDApCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAbxC,EAAKZ,MAAQ,CACZhB,OAAQ,GACR0B,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,OAAI,EAAKZ,SAAS,CAACrB,OAAQiC,S,oBAO5C,WAAS,IAAD,OACDC,EAAiBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAC,GAC/C,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAEjE,OAAO,sBAAKzC,UAAU,KAAf,UACJ,gCACC,oBAAIA,UAAU,KAAd,6BACG,cAAC2C,EAAD,CAAWnC,aAAcgB,KAAKI,oBAE/B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUxB,OAAQkC,e,GA9BVZ,c,MCDlBkB,IAASC,OAAO,cAAC,EAAD,IACbC,SAASC,eAAe,W","file":"static/js/main.d01dabee.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst Card = ({name, email, id})=>{\r\n\t\t\treturn(\r\n\t\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2> {name} </h2>\r\n\t\t\t\t\t<p> {email} </p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\n//a function which converts the robot.js file(which get here as prpos)\r\n//into an array of cards using map func.\r\nconst CardList =({robots})=>{\r\n\t/*an example of an uncought Error to see ErrorBoundry component influance\r\n\tif(true){\r\n\t\tthrow new Error ('NOOOOOO!')\r\n\t}\r\n\t*/\r\n\treturn robots.map((user)=> {\r\n\t\treturn <Card key={user.id} \r\n\t\t\t\t\t id={user.id} \r\n\t\t\t\t\t name={user.name} \r\n\t\t\t\t\t email={user.email}/>\r\n\t\t    });\r\n}\r\nexport default CardList; ","import React from 'react'\r\n\r\nconst SerachBox = ({searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t<input \r\n\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search' \r\n\t\tplaceholder='serach robot'\r\n\t\tonChange={searchChange} />\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default SerachBox;","import React from 'react'\r\n\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border: '3px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n}\r\nexport default Scroll;","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError : false\r\n\t\t}\r\n\t}\r\n\r\n\t//only in React 16^ \r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({hasError:true});\r\n\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1> Opps that is no good..</h1>;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\nexport default ErrorBoundry;","import React , {Component} from 'react'\r\nimport {robots} from '../components/robots'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nimport './App.css'\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t super();\r\n\t this.state = {\r\n\t \trobots: [],\r\n\t \tsearchfeild: ''\r\n     }\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response => response.json())\r\n  .then(usersArray => this.setState({robots: usersArray}))\r\n\t}\r\n\r\n\tonSearchChange = (event)=>{\r\n\t\tthis.setState({searchfeild:event.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfeild.toLowerCase())\r\n\t\t})\r\n\t\treturn(<div className='tc'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1 className='f1'>RoboFreinds App</h1>\r\n\t\t\t\t    \t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <Scroll>\r\n\t\t\t\t    \t<ErrorBoundry>\r\n\t\t\t    \t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t    \t\t</ErrorBoundry>\r\n\t\t\t    \t</Scroll>\r\n\t\t\t   </div>\r\n\t    )\r\n   }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App'\r\nimport 'tachyons'\r\nimport {robots} from './components/robots'\r\n\r\nReactDOM.render(<App/>\r\n\t, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}